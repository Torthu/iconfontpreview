// Generated by CoffeeScript 1.11.0
(function() {
  var argv, font, fontName, fs, glyph, html, inFile, inFileName, index, opentype, outFolder, outputTable, ref, ref1, specialChars, unicodeToChar,
    indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  opentype = require('opentype.js');

  argv = require('minimist')(process.argv);

  fs = require('fs');

  inFile = argv["in"];

  outFolder = argv.out || (argv.out = './');

  if (argv.help === true) {
    console.log("Usage: iconfontpreview --in path/to/font/file\n\nOptions:\n\n--in      path to font file\n--out     path to out folder (default is current folder)\n--help    help");
    return;
  }

  if (!(inFile || inFile === '')) {
    throw new Error('No inFile specified');
  }

  console.log("\nICONFONTPREVIEW:\n- Creating preview of " + inFile + "\n- Writing to " + outFolder + "\n");

  font = opentype.loadSync(inFile);

  inFileName = inFile.split('/');

  inFileName = inFileName[inFileName.length - 1];

  fs.createReadStream(inFile).pipe(fs.createWriteStream(outFolder + inFileName));

  unicodeToChar = function(unicode) {
    return String.fromCharCode(unicode);
  };

  fontName = font.names.preferredFamily.en;

  outputTable = "";

  specialChars = [0, 1, 32];

  ref = font.glyphs.glyphs;
  for (index in ref) {
    glyph = ref[index];
    if (glyph.unicode === void 0 || (ref1 = glyph.unicode, indexOf.call(specialChars, ref1) >= 0)) {
      continue;
    }
    outputTable += "<div>\n	<h1>" + (unicodeToChar(glyph.unicode)) + "</h1>\n	<p>Unicode: " + glyph.unicode + "</p>\n	<p>Name: " + glyph.name + "</p>\n	<p>Character: " + (unicodeToChar(glyph.unicode)) + "</p>\n</div>\n";
  }

  html = "<html>\n	<head>\n		<title>" + fontName + " Preview</title>\n		<style type=\"text/css\">\n			@font-face {\n				font-family: " + fontName + ";\n				src: url(\"./" + inFileName + "\"); \n			}\n\n			body {\n				font-family: sans-serif;\n				margin: 1em;\n				background: #f9f9f9;\n				color: #222;\n			}\n\n			#container div {\n				float: left;\n				width: 12.5%;\n				margin: 1px;\n				padding: 0.5em;\n				background: #fff;\n				height: 180px;\n			}\n\n			#container h1 {\n				font-family: \"" + fontName + "\";\n			}\n\n			#container p {\n				color: #bbb;\n				font-size: 0.65rem;\n			}\n		</style>\n	</head>\n	<body>\n		<h1>" + fontName + " Preview</h1>\n		<div id=\"container\">\n			" + outputTable + "\n		</div>\n	</body>\n</html>";

  fs.writeFileSync('./preview.html', html);

}).call(this);
